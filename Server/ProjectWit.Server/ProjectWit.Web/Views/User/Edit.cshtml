@model ProjectWit.Model.UsersViewModel

@{
    Layout = "~/Views/Shared/_MyAccountLayout.cshtml";
}
<h2>@ViewBag.Title</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.User_UID)


        <div class="form-group">
            @Html.LabelFor(model => model.UserName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control", disabled = "disabled" } })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.MiddleName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.MiddleName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.MiddleName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.Company_UID, "Company", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("Company_UID", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.Company_UID, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.EmailAddress, new { @class = "col-md-2 control-label" })
            <div class="col-md-10">
                @Html.TextBoxFor(m => m.EmailAddress, new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.EmailAddress, "", new { @class = "text-danger" })
            </div>
        </div>
        <h3>
            Roles
        </h3>

        <div class="form-group">
            <table class="table-responsive">
                <tr>
                    @for (int index = 0; index < @Model.AspNetRole.Count; index++)
                    {
                        @Html.HiddenFor(x => x.AspNetRole[index].Id)
                        @Html.HiddenFor(x => x.AspNetRole[index].Name)
                        @*@Html.HiddenFor(x => x.AspNetRole[index].IsSelected, new { id = "AspNetRole[" + index + "].IsSelected"})*@

                        <td>
                            @Html.Label(@Model.AspNetRole[index].Name, new { @class = "control-label col-md-2", @for = "AspNetRole[" + index + "].IsSelected" })
                        </td>
                        <td>
                            @*TODO: Set disable if !ViewBag.IsSysAdmin*@
                            @if (ViewBag.IsSysAdmin)
                            {
                                @Html.CheckBoxFor(x => x.AspNetRole[index].IsSelected, new { @class = "checkbox-inline", id = "AspNetRole[" + index + "].IsSelected" })
                            }
                            else
                            {
                                @Html.CheckBoxFor(x => x.AspNetRole[index].IsSelected, new { @class = "checkbox-inline", id = "AspNetRole[" + index + "].IsSelected", disabled ="disabled" })
                            }
                        </td>
                    }
                </tr>
            </table>
        </div>
       
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
